<?xml version="1.0" standalone="yes"?>
<beast>

    <matrixParameter id="mat">
        <parameter
                value="0.0076177742633394985 0.3515255484089337 0.30611493207760276 -2.132446790112065 -0.05945162267545193 -0.8161262390971513"/>
        <parameter
                value="0.05702524809146323 -0.784929798992992 -1.0304943902767967 -0.3930227002265834 0.2079912019698792 -1.0144436604293505"/>
        <parameter
                value="-0.5484010117038763 0.24501763591278475 -0.21629784327601548 1.712948337244973 1.4061412930408388 1.056873733132347"/>
    </matrixParameter>

    <matrixColumnParameter id="mat.col1" column="1">
        <matrixParameter idref="mat"/>
    </matrixColumnParameter>

    <report>
        <simpleParameterReport>
            <parameter idref="mat.col1"/>
        </simpleParameterReport>
    </report>

    <transformedMatrixParameter id="orthogonalSubspace">
        <matrixParameter idref="mat"/>
        <svdTransform nColumns="3" nRows="6"/>
    </transformedMatrixParameter>

    <report>
        <simpleParameterReport>
            <parameter idref="orthogonalSubspace"/>
        </simpleParameterReport>
    </report>

    <assertEqual tolerance="1e-8" verbose="true" charactersToStrip="{}">
        <message>
            Check trait variance
        </message>
        <actual regex="(?s)orthogonalSubspace values:\s*(.*?)\n\n">
            <simpleParameterReport>
                <parameter idref="orthogonalSubspace"/>
            </simpleParameterReport>
        </actual>
        <expected>
            0.4173423545597329 -0.01737412733942148 0.35996816224797856
            -0.12158122048824885 0.8302784313505115 -0.309151056440685
            0.13198533247715352 1.0861782197475753 0.07215638568803533
            -2.717953919111021 -0.2669356570558202 0.42126002682924546
            -1.01888541098346 -0.3075722697176161 -0.9440868549640973
            -1.5209813887739514 0.7061638563318586 0.00939622940562212
        </expected>
    </assertEqual>


    <mcmc id="mcmc" chainLength="2" autoOptimize="true">
        <posterior id="posterior">
            <dummyLikelihood>
                <parameter idref="mat"/>
            </dummyLikelihood>
        </posterior>
        <operators>
            <fireParameterChanged weight="1"
                                  value="0.0 0.0 0.0 0.0 0.0 0.0
                                        -0.17438164408909365 -0.42898479922720356 0.4270454816694809 -0.11560476062111587 2.3897801345872987 0.7619824434342454
                                         0.04658821120386576 0.09104086929644847 -0.8920557774375898 -0.7122666957434696 -0.3440100523685048 -0.6230781939110783">
                <parameter idref="mat"/>
            </fireParameterChanged>
        </operators>
        <log id="screenLog" logEvery="100">
            <column label="Posterior" dp="4" width="12">
                <posterior idref="posterior"/>
            </column>
            <column label="Matrix" dp="4" width="12">
                <parameter idref="orthogonalSubspace"/>
            </column>
        </log>
    </mcmc>

    <assertEqual tolerance="1e-8" verbose="true" charactersToStrip="{}">
        <message>
            Check trait variance
        </message>
        <actual regex="(?s)orthogonalSubspace values:\s*(.*?)\n\n">
            <simpleParameterReport>
                <parameter idref="orthogonalSubspace"/>
            </simpleParameterReport>
        </actual>
        <expected>
            0.18038640896505753 0.0063374031813011305 0.0
            0.43687797761402436 0.03813175220386952 0.0
            -0.6688165980271767 0.7285710066132576 0.0
            -0.09731937149077556 0.714994577934844 0.0
            -2.3861299258786177 -0.36847792963103565 0.0
            -0.9106626564567298 0.37354679220237846 0.0
        </expected>
    </assertEqual>

    <report>
        <simpleParameterReport>
            <parameter idref="mat.col1"/>
        </simpleParameterReport>
    </report>

    <report>
        <simpleParameterReport>
            <parameter idref="orthogonalSubspace"/>
        </simpleParameterReport>
    </report>


</beast>
        <!--
        # Julia code

        using LinearAlgebra
        import Random
        Random.seed!(666)

        function print_mat(X::AbstractMatrix)
            m, n = size(X)
            return join([join(X[i, :], ' ') for i = 1:m], '\n')
        end

        const K = 3
        const P = 6

        L = randn(K, P)
        Lsvd = svd(L)
        L_ortho = Diagonal(Lsvd.S) * Lsvd.Vt

        L_final = Diagonal([-1, 1, -1]) * L_ortho # SVD correct up to sign constraint
        #clipboard(print_mat(L_final'))

        L2 = randn(K, P)
        L2[1, :] .= 0 # make sure it can handle singular matrices
        L2svd = svd(L2)
        L2_ortho = Diagonal(L2svd.S) * L2svd.Vt

        L2_final = Diagonal([-1, 1, -1]) * L2_ortho # SVD correct up to sign constraint
        # clipboard(print_mat(L2_final'))
        -->
