<?xml version="1.0" standalone="yes"?>

<!-- Generated by BEAUTi v1.10.5 Prerelease #23570d1                         -->
<!--       by Alexei J. Drummond, Andrew Rambaut and Marc A. Suchard         -->
<!--       Department of Computer Science, University of Auckland and        -->
<!--       Institute of Evolutionary Biology, University of Edinburgh        -->
<!--       David Geffen School of Medicine, University of California, Los Angeles-->
<!--       http://beast.community/                                           -->
<beast version="1.10.5">

	<taxa id="taxa">
		<taxon id="A"/>
		<taxon id="B"/>
		<taxon id="C"/>
		<taxon id="D"/>
	</taxa>


	<newBirthDeathSerialSampling id="new.bdss" units="years" hasFinalSample="false" conditionOnSurvival="false">
		<birthRate>
			<parameter id="bdss.birthRate" value="0.8" lower="0.0"/>
		</birthRate>
		<deathRate>
			<parameter id="bdss.deathRate" value="0.5" lower="0.0" upper="1.0"/>
		</deathRate>
		<samplingRate>
			<parameter id="bdss.samplingRate" value="0.2" lower="0.0"/>
		</samplingRate>
		<origin>
			<parameter id="bdss.origin" value="5.0" lower="0.0"/>
		</origin>
	</newBirthDeathSerialSampling>

	<birthDeathSerialSampling id="old.bdss" units="years" hasFinalSample="false">
		<birthRate>
			<parameter idref="bdss.birthRate"/>
		</birthRate>
		<deathRate>
			<parameter idref="bdss.deathRate"/>
		</deathRate>
		<psi>
			<parameter idref="bdss.samplingRate"/>
		</psi>
		<origin>
			<parameter idref="bdss.origin"/>
		</origin>
	</birthDeathSerialSampling>


	<newick id="startingTree" usingHeights="true" usingDates="false">
		((A:1.0,B:2.0):1.0,(C:1.0,D:2.0):2.0)
	</newick>


	<!-- Generate a tree model                                                   -->
	<treeModel id="treeModel">
		<newick idref="startingTree"/>
		<rootHeight>
			<parameter id="treeModel.rootHeight"/>
		</rootHeight>
		<nodeHeights internalNodes="true">
			<parameter id="treeModel.internalNodeHeights"/>
		</nodeHeights>
		<nodeHeights internalNodes="true" rootNode="true">
			<parameter id="treeModel.allInternalNodeHeights"/>
		</nodeHeights>
	</treeModel>

	<!-- Statistic for sum of the branch lengths of the tree (tree length)       -->
	<treeLengthStatistic id="treeLength">
		<treeModel idref="treeModel"/>
	</treeLengthStatistic>


	<!-- Generate a speciation likelihood for Yule or Birth Death                -->
	<speciationLikelihood id="new.speciation">
		<model>
			<birthDeathSerialSampling idref="new.bdss"/>
		</model>
		<speciesTree>
			<treeModel idref="treeModel"/>
		</speciesTree>
	</speciationLikelihood>

	<numericalGradient id="new.numGrad.birthRate">
		<parameter idref="bdss.birthRate"/>
		<speciationLikelihood idref="new.speciation"/>
	</numericalGradient>

	<numericalGradient id="new.numGrad.deathRate">
		<parameter idref="bdss.deathRate"/>
		<speciationLikelihood idref="new.speciation"/>
	</numericalGradient>

	<numericalGradient id="new.numGrad.psi">
		<parameter idref="bdss.samplingRate"/>
		<speciationLikelihood idref="new.speciation"/>
	</numericalGradient>

	<numericalGradient id="new.numGrad.origin">
		<parameter idref="bdss.origin"/>
		<speciationLikelihood idref="new.speciation"/>
	</numericalGradient>

	<compoundGradient id="new.numGrad.bdss.likelihood">
		<numericalHessian>
			<numericalGradient idref="new.numGrad.birthRate"/>
		</numericalHessian>
		<numericalHessian>
			<numericalGradient idref="new.numGrad.deathRate"/>
		</numericalHessian>
		<numericalHessian>
			<numericalGradient idref="new.numGrad.psi"/>
		</numericalHessian>
		<numericalHessian>
			<numericalGradient idref="new.numGrad.origin"/>
		</numericalHessian>
	</compoundGradient>

	<speciationLikelihood id="old.speciation">
		<model>
			<birthDeathSerialSampling idref="old.bdss"/>
		</model>
		<speciesTree>
			<treeModel idref="treeModel"/>
		</speciesTree>
	</speciationLikelihood>

	<numericalGradient id="old.numGrad.birthRate">
		<parameter idref="bdss.birthRate"/>
		<speciationLikelihood idref="old.speciation"/>
	</numericalGradient>

	<numericalGradient id="old.numGrad.deathRate">
		<parameter idref="bdss.deathRate"/>
		<speciationLikelihood idref="old.speciation"/>
	</numericalGradient>

	<numericalGradient id="old.numGrad.psi">
		<parameter idref="bdss.samplingRate"/>
		<speciationLikelihood idref="old.speciation"/>
	</numericalGradient>

	<numericalGradient id="old.numGrad.origin">
		<parameter idref="bdss.origin"/>
		<speciationLikelihood idref="old.speciation"/>
	</numericalGradient>

	<compoundGradient id="old.numGrad.bdss.likelihood">
		<numericalHessian>
			<numericalGradient idref="old.numGrad.birthRate"/>
		</numericalHessian>
		<numericalHessian>
			<numericalGradient idref="old.numGrad.deathRate"/>
		</numericalHessian>
		<numericalHessian>
			<numericalGradient idref="old.numGrad.psi"/>
		</numericalHessian>
		<numericalHessian>
			<numericalGradient idref="old.numGrad.origin"/>
		</numericalHessian>
	</compoundGradient>

	<cachedReport id="new.numGrad">
		<compoundGradient idref="new.numGrad.bdss.likelihood"/>
	</cachedReport>

	<cachedReport id="old.numGrad">
		<compoundGradient idref="old.numGrad.bdss.likelihood"/>
	</cachedReport>

	<assertEqual tolerance="1e-6" verbose="true" charactersToStrip="\[\],">
			<message>
					numeric gradient comparison
			</message>
			<actual regex="numeric : (.*?)\n">
					<cachedReport idref="new.numGrad"/>
			</actual>
			<expected regex="numeric : (.*?)\n">
					<cachedReport idref="old.numGrad"/>
			</expected>
	</assertEqual>

</beast>
